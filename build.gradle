/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples
 */
//plugins {
//    id 'com.bmuschko.clover' version '3.0.3'
//}

buildscript {

    repositories {
        mavenCentral()
        gradlePluginPortal()


    }
    dependencies {
        classpath 'com.bmuschko:gradle-clover-plugin:3.0.3'
        //classpath "com.github.node-gradle:gradle-node-plugin:3.1.1"
    }


}

allprojects{
    apply plugin: "java"
    sourceCompatibility = 1.17
    targetCompatibility = 1.17
    apply plugin: "com.bmuschko.clover"

    //apply plugin: "com.github.node-gradle.node"

    repositories {

        mavenCentral()
    }


    dependencies {


        clover 'org.openclover:clover:4.4.1'



        // Use JUnit Jupiter for testing.
        testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

        // This dependency is used by the application.
        //implementation 'com.google.guava:guava:31.0.1-jre'

        testImplementation 'org.junit.platform:junit-platform-launcher:1.8.2'

        // Use JUnit Jupiter for testing.
        testImplementation 'org.mockito:mockito-core:4.3.1'
        testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'



    }
    clover{

        compiler{
            sourceCompatibility = 1.9
            targetCompatibility = 1.9
            additionalArgs = "-g:lines,source,vars"
        }
        report {
            xml=true
            html = true
        }


    }
    test{
        testLogging{
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }
    test {
        // Use junit platform for unit tests
        useJUnitPlatform()
    }

}

// Project specific stuff
project (':shared'){
//    dependencies {
//        testImplementation project(':client')
//        testImplementation project(':server')
//    }
}

//project (':client'){
//    dependencies {
//        implementation project(':shared')
//    }
//}

//project (':server'){
//    dependencies {
//        implementation project(':shared')
//        testImplementation project(':client')
//    }
//}

project ('apiserver'){
    dependencies {
        implementation project(':shared')
    }
}

//tasks.register("run-server") {
//    dependsOn project('server').getTasksByName('run',false)
//    group = 'Run Client/Server'
//    description = 'Run the Server'
//}
//
//
//tasks.register("run-client") {
//    dependsOn project('client').getTasksByName('run',false)
//    group = 'Run Client/Server'
//    description = 'Run the Client'
//}

tasks.register("run-apiserver") {
    dependsOn project('apiserver').getTasksByName('bootRun',false)
    group = 'Run Client/Server'
    description = 'Run the API Server'
}

tasks.register("run-webserver") {
    dependsOn project('webserver').getTasksByName('npmSetup',false)
    dependsOn project('webserver').getTasksByName('npmInstall',false)
    dependsOn project('webserver').getTasksByName('npm_start',false)
    group = 'Run Client/Server'
    description = 'Run the Web Server'
}

task resolveDependencies {
    doLast {
        project.rootProject.allprojects.each { subProject ->
            subProject.buildscript.configurations.each { configuration->
                if(configuration.canBeResolved) {
                    configuration.resolve()
                }
            }
            subProject.configurations.each { configuration ->
                if(configuration.canBeResolved) {
                    configuration.resolve()
                }
            }
        }
    }
}

