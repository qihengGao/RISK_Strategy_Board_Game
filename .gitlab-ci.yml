# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
stages:
  - build
  - test
  - deploy
  - test-deploy

build:
  image: gradle:7.4.1-jdk17
  stage: build
  script:
    - gradle resolveDependencies
    - gradle --build-cache assemble
  tags:
    - docker
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

clover-report:
  image: gradle:7.4.1-jdk17
  stage: test
  script:
    - gradle cloverAggregateReports
  tags:
    - docker
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
      - build
      - .gradle

coverage-summary:
  image: python:3.7-alpine3.14
  stage: test
  script:
    - pip3 install bs4
    - python3 scripts/clover.py
  tags:
    - docker
  needs:
    - clover-report
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build

pages:
  image: alpine:3.14
  stage: test
  tags:
    - docker
  needs:
    - clover-report
  script:
    - mkdir .public
    - cp -r build/reports/clover/html/* .public/
    - mv .public public
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
  artifacts:
    paths:
      - public
  only:
    - main

uploadArtifactsForNotMainBracnh:
  image: alpine:3.14
  stage: test
  tags:
    - docker
  needs:
    - clover-report
  script:
    - mkdir coverageout
    - cp -r build/reports/clover/html/* coverageout/
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
  artifacts:
    paths:
      - coverageout
  except:
    - main

StopPreviousServer:
  stage: deploy
  tags:
    - vcm25354Deploy
  needs:
    - clover-report
  script:
    - ls
    - docker kill risk-game-apiserver || true
    - docker rm risk-game-apiserver || true
    - docker kill risk-game-webserver || true
    - docker rm risk-game-webserver || true
  only:
    - 103-fix-ci-cd-pipeline

DeployServer:
  stage: deploy
  tags:
    - vcm25354Deploy
  needs:
    - StopPreviousServer
  script:
    - ls scripts
    - docker run -d --name risk-game-apiserver --user $(id -u):$(id -g) -p 8080:8080  -v $(pwd):/risk gradle:7.4.1-jdk17 /risk/scripts/deploy.sh
    - docker run -d --name risk-game-webserver --user $(id -u):$(id -g) --network="host" -v $(pwd):/risk node:16-alpine /risk/scripts/deployWebServer.sh
  only:
    - 103-fix-ci-cd-pipeline

TestAPIServer:
  stage: test-deploy
  tags:
    - vcm25354Deploy
  needs:
    - DeployServer
  script:
    - ls
    - ./scripts/test-deploy.sh
  only:
    - 103-fix-ci-cd-pipeline
